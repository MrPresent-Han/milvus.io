name: Build and deploy to preview

on:
  repository_dispatch:
    types: dev-deploy
    branches:
      - test # stop this action
  push:
    branches:
      - test # stop this action
  workflow_dispatch:

env:
  NODE_OPTIONS: '--max_old_space_size=8192'

jobs:
  build:
    runs-on: 'ubuntu-latest'
    outputs:
      docker-image-tag: ${{ steps.generate-tag-name.outputs.docker_tag }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'preview'

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 6

      - name: update submodules
        run: |
          git submodule init
          git submodule update --remote

      - name: Get pnpm cache directory path
        id: pnpm-cache-dir-path
        run: echo "dir=$(pnpm get store)" >> $GITHUB_OUTPUT

      - name: Caching pnpm
        uses: actions/cache@v3
        id: pnpm-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.pnpm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm.lock') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-${{ hashFiles('pnpm.lock') }}
            ${{ runner.os }}-pnpm-

      #       - name: Caching Gatsby
      #         id: gatsby-cache-build
      #         uses: actions/cache@v2
      #         with:
      #           path: |
      #             public
      #             .cache
      #           key: ${{ runner.os }}-gatsby-build-preview-${{ github.run_id }}
      #           restore-keys: |
      #             ${{ runner.os }}-gatsby-build-preview

      - uses: azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME}}
          password: ${{ secrets.DOCKER_PWD}}

      - name: Generate docker image tag name
        id: generate-tag-name
        run: |
          export tag=${{ github.sha }}-$GITHUB_RUN_NUMBER
          echo $tag
          echo "docker_tag=$tag" >> $GITHUB_OUTPUT

      - name: Installing dependencies
        run: pnpm install

      - name: Building Milvus site and push to docker hub
        id: build-image
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 2
          retry_on: error
          command: |
            docker build "$GITHUB_WORKSPACE/" -f  "Preview.Dockerfile" -t milvus/milvus-preview:${{ steps.generate-tag-name.outputs.docker_tag }} -e MSERVICE_URL=${{ secrets.MSERVICE_URL }} CMS_BASE_URL=${{ secrets.CMS_BASE_URL }} REPO_STATICS_KEY=${{ secrets.REPO_STATICS_KEY }} INKEEP_API_KEY=${{ secrets.INKEEP_API_KEY }} INKEEP_INTEGRATION_ID=${{ secrets.INKEEP_INTEGRATION_ID }} INKEEP_ORGANIZATION_ID=${{ secrets.INKEEP_ORGANIZATION_ID }} IS_PREVIEW=preview
            docker push milvusdb/milvus-io-dev:${{ steps.generate-tag-name.outputs.docker_tag }}
      #         env:
      #           GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true
      #           CI: true

  # deploy:
  #   runs-on: ued-self-hosted
  #   needs: build
  #   steps:
  #     - name: Deploy to cluster
  #       run: |
  #         echo ${{ secrets.kubeconfig }} > config64
  #         base64 -d config64 > kubeconfig
  #         kubectl set image deployment/zilliz-com-dev zilliz-com-dev=zilliz/z2-dev:${{ needs.build.outputs.docker-image-tag }} -n ued --kubeconfig=kubeconfig
Ã¥
